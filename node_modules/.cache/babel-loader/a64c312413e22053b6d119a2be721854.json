{"ast":null,"code":"import { MENU_PAGE, ERROR, Feedback_Value } from './actionTypes';\nimport * as community from '../data/community.json';\nimport axios from 'axios';\nexport const communityAction = () => {\n  return {\n    type: MENU_PAGE,\n    payload: community\n  };\n};\nexport const FeedbackAction = feedback => dispatch => {\n  axios.get('/', {\n    params: {\n      feedback\n    }\n  }).then(res => dispatch({\n    type: Feedback_Value,\n    payload: res\n  })).catch(err => dispatch({\n    type: ERROR,\n    payload: err\n  }));\n};","map":{"version":3,"sources":["F:/Bangalore_react_test/test-code/cssPractice/src/redux/action/menu-page.js"],"names":["MENU_PAGE","ERROR","Feedback_Value","community","axios","communityAction","type","payload","FeedbackAction","feedback","dispatch","get","params","then","res","catch","err"],"mappings":"AAAA,SAASA,SAAT,EAAmBC,KAAnB,EAAyBC,cAAzB,QAA8C,eAA9C;AACA,OAAO,KAAKC,SAAZ,MAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACI,OAAO,MAAMC,eAAe,GAAG,MAAO;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEN,SADH;AAEHO,IAAAA,OAAO,EAAEJ;AAFN,GAAP;AAIC,CALM;AAOP,OAAO,MAAMK,cAAc,GAAIC,QAAD,IAAcC,QAAQ,IAAI;AAEpDN,EAAAA,KAAK,CAACO,GAAN,CAAU,GAAV,EACA;AACIC,IAAAA,MAAM,EAAE;AACJH,MAAAA;AADI;AADZ,GADA,EAKCI,IALD,CAKMC,GAAG,IAAIJ,QAAQ,CAAC;AAClBJ,IAAAA,IAAI,EAAEJ,cADY;AAElBK,IAAAA,OAAO,EAAEO;AAFS,GAAD,CALrB,EAYCC,KAZD,CAYOC,GAAG,IAAIN,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEL,KAAR;AAAeM,IAAAA,OAAO,EAAES;AAAxB,GAAD,CAZtB;AAaH,CAfM","sourcesContent":["import  {MENU_PAGE,ERROR,Feedback_Value} from './actionTypes'\r\nimport * as community from '../data/community.json'\r\nimport axios from 'axios'\r\n    export const communityAction = ()  => {\r\n    return {\r\n        type: MENU_PAGE,\r\n        payload: community\r\n    }  \r\n    }\r\n\r\n    export const FeedbackAction = (feedback) => dispatch => {\r\n\r\n        axios.get('/',\r\n        {\r\n            params: {\r\n                feedback\r\n            }})\r\n        .then(res => dispatch({\r\n            type: Feedback_Value,\r\n            payload: res\r\n    }),\r\n        \r\n        \r\n        )\r\n        .catch(err => dispatch({ type: ERROR, payload: err }))\r\n    }"]},"metadata":{},"sourceType":"module"}